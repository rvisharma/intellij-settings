<templateSet group="JavaScript Testing">
  <template name="des" value="describe('$NAME$', () =&gt; {&#10;  $END$&#10;});" description="Inserts describe() block" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="it" value="it('should $NAME$', () =&gt; {&#10;  $END$&#10;}); " description="Inserts it() block" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context />
  </template>
  <template name="bf" value="before(() =&gt; {&#10;  $END$&#10;});" description="Inserts before() block" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="bfe" value="beforeEach(() =&gt; {&#10;  $END$&#10;});" description="Inserts beforeEach() block" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="af" value="after(() =&gt; {&#10;  $END$&#10;});" description="Inserts after() block" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="spec" value="import React from 'react';&#10;import {render, fireEvent} from 'react-testing-library';&#10;&#10;describe('$NAME$', () =&gt; {&#10;  let props;&#10;  &#10;  beforeEach(() =&gt; {&#10;    props = {$1$}&#10;  });&#10;  &#10;  const setup = (initialProps = props) =&gt; {&#10;    return render(&lt;$NAME$ {...initialProps}/&gt;);&#10;  }&#10;  &#10;  it('should render $NAME$', () =&gt; {&#10;    const {container} = setup();&#10;    expect(container).toMatchSnapshot();&#10;  });&#10;  &#10;  it('should $2$', () =&gt; {&#10;    const {getByText, container} = setup();&#10;    $END$&#10;  });&#10;});" description="Inserts describe() block with one it() block" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="fileNameWithoutExtension(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="true" />
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>